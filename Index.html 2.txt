<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>PyCertify - Professional Python Certification</title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
	<style>
		* {
			margin: 0;
			padding: 0;
			box-sizing: border-box;
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		}
		
		body {
			background: linear-gradient(135deg, #1a2a6c, #2c3e50);
			color: #333;
			line-height: 1.6;
			min-height: 100vh;
			overflow-x: hidden;
		}
		
		.header {
			background: linear-gradient(135deg, #2c3e50, #4a6491);
			color: white;
			padding: 15px 20px;
			display: flex;
			justify-content: space-between;
			align-items: center;
			box-shadow: 0 2px 15px rgba(0,0,0,0.3);
			position: sticky;
			top: 0;
			z-index: 100;
		}
		
		.logo {
			display: flex;
			align-items: center;
		}
		
		.logo i {
			font-size: 24px;
			margin-right: 10px;
			color: #3498db;
		}
		
		.logo h1 {
			font-size: 20px;
			font-weight: 600;
		}
		
		.followers {
			background-color: #3498db;
			padding: 5px 10px;
			border-radius: 20px;
			font-size: 14px;
		}
		
		.time {
			font-size: 14px;
			opacity: 0.8;
		}
		
		.hero {
			background: linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url('https://images.unsplash.com/photo-1542831371-29b0f74f9713?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80');
			background-size: cover;
			background-position: center;
			color: white;
			text-align: center;
			padding: 60px 20px;
			margin-bottom: 30px;
			border-radius: 0 0 20px 20px;
		}
		
		.hero h2 {
			font-size: 2.5rem;
			margin-bottom: 20px;
			text-transform: uppercase;
			letter-spacing: 1px;
			text-shadow: 0 2px 4px rgba(0,0,0,0.5);
		}
		
		.price-tag {
			background: linear-gradient(to right, #e74c3c, #c0392b);
			display: inline-block;
			padding: 10px 25px;
			border-radius: 30px;
			font-size: 1.8rem;
			font-weight: bold;
			margin: 20px 0;
			box-shadow: 0 4px 15px rgba(0,0,0,0.4);
			animation: pulse 2s infinite;
			border: 3px solid white;
		}
		
		.features {
			max-width: 600px;
			margin: 30px auto;
			text-align: left;
			background: rgba(0,0,0,0.5);
			padding: 25px;
			border-radius: 15px;
			backdrop-filter: blur(10px);
		}
		
		.features li {
			margin: 15px 0;
			list-style-type: none;
			display: flex;
			align-items: flex-start;
		}
		
		.features li i {
			color: #2ecc71;
			margin-right: 10px;
			font-size: 20px;
		}
		
		.cta-button {
			display: inline-block;
			background: linear-gradient(to right, #e74c3c, #c0392b);
			color: white;
			padding: 15px 40px;
			font-size: 1.2rem;
			font-weight: bold;
			text-decoration: none;
			border-radius: 50px;
			margin: 20px 0;
			box-shadow: 0 6px 20px rgba(0,0,0,0.4);
			transition: all 0.3s ease;
			border: none;
			cursor: pointer;
			text-transform: uppercase;
			letter-spacing: 1px;
			position: relative;
			overflow: hidden;
		}
		
		.cta-button:hover {
			transform: translateY(-3px);
			box-shadow: 0 8px 25px rgba(0,0,0,0.5);
			background: linear-gradient(to right, #c0392b, #e74c3c);
		}
		
		.cta-button:after {
			content: '';
			position: absolute;
			top: -50%;
			left: -60%;
			width: 20%;
			height: 200%;
			background: rgba(255,255,255,0.2);
			transform: rotate(30deg);
			transition: all 0.5s;
		}
		
		.cta-button:hover:after {
			left: 120%;
		}
		
		.offer-section {
			background: linear-gradient(135deg, #3498db, #2c3e50);
			color: white;
			padding: 40px 20px;
			text-align: center;
			margin: 30px 0;
			border-radius: 15px;
			position: relative;
			overflow: hidden;
			max-width: 1200px;
			margin-left: auto;
			margin-right: auto;
		}
		
		.offer-section:before {
			content: '';
			position: absolute;
			top: -50%;
			left: -50%;
			width: 200%;
			height: 200%;
			background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 70%);
			transform: rotate(30deg);
		}
		
		.offer-section h3 {
			font-size: 1.8rem;
			margin-bottom: 20px;
			position: relative;
		}
		
		.offer-section p {
			max-width: 800px;
			margin: 0 auto 20px;
			font-size: 1.1rem;
			position: relative;
		}
		
		.limited-offer {
			background-color: #f39c12;
			color: #2c3e50;
			font-weight: bold;
			padding: 10px 25px;
			border-radius: 30px;
			display: inline-block;
			margin: 15px 0;
			animation: pulse 2s infinite;
			box-shadow: 0 4px 10px rgba(0,0,0,0.2);
			position: relative;
		}
		
		@keyframes pulse {
			0% { transform: scale(1); box-shadow: 0 4px 10px rgba(0,0,0,0.2); }
			50% { transform: scale(1.05); box-shadow: 0 6px 15px rgba(0,0,0,0.3); }
			100% { transform: scale(1); box-shadow: 0 4px 10px rgba(0,0,0,0.2); }
		}
		
		.testimonials {
			max-width: 1200px;
			margin: 50px auto;
			padding: 0 20px;
		}
		
		.testimonials h3 {
			text-align: center;
			font-size: 2rem;
			margin-bottom: 40px;
			color: white;
			text-shadow: 0 2px 4px rgba(0,0,0,0.3);
		}
		
		.testimonial-grid {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
			gap: 30px;
		}
		
		.testimonial-card {
			background: linear-gradient(145deg, #2c3e50, #1a2a6c);
			border-radius: 15px;
			padding: 25px;
			box-shadow: 0 10px 30px rgba(0,0,0,0.3);
			transition: transform 0.3s ease, box-shadow 0.3s ease;
			color: white;
			position: relative;
			overflow: hidden;
		}
		
		.testimonial-card:before {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 5px;
			height: 100%;
			background: #3498db;
		}
		
		.testimonial-card:hover {
			transform: translateY(-10px);
			box-shadow: 0 15px 40px rgba(0,0,0,0.4);
		}
		
		.testimonial-card .quote {
			font-size: 3rem;
			color: #3498db;
			opacity: 0.3;
			line-height: 1;
			position: absolute;
			top: 10px;
			right: 20px;
		}
		
		.testimonial-content {
			margin: 10px 0 20px;
			font-style: italic;
			color: #ecf0f1;
			position: relative;
			z-index: 1;
		}
		
		.student {
			display: flex;
			align-items: center;
		}
		
		.student img {
			width: 60px;
			height: 60px;
			border-radius: 50%;
			object-fit: cover;
			margin-right: 15px;
			border: 3px solid #3498db;
		}
		
		.student-info h4 {
			color: #fff;
		}
		
		.student-info p {
			color: #bdc3c7;
			font-size: 0.9rem;
		}
		
		.faq {
			max-width: 800px;
			margin: 50px auto;
			padding: 0 20px;
		}
		
		.faq h3 {
			text-align: center;
			font-size: 2rem;
			margin-bottom: 40px;
			color: white;
			text-shadow: 0 2px 4px rgba(0,0,0,0.3);
		}
		
		.faq-item {
			margin-bottom: 20px;
			border-radius: 10px;
			overflow: hidden;
			box-shadow: 0 5px 15px rgba(0,0,0,0.2);
			background: linear-gradient(145deg, #2c3e50, #1a2a6c);
			color: white;
		}
		
		.faq-question {
			background: #3498db;
			color: white;
			padding: 20px;
			font-size: 1.2rem;
			font-weight: 600;
			cursor: pointer;
			display: flex;
			justify-content: space-between;
			align-items: center;
			transition: background 0.3s;
		}
		
		.faq-question:hover {
			background: #2980b9;
		}
		
		.faq-answer {
			background: rgba(255,255,255,0.1);
			padding: 20px;
			display: none;
			color: #ecf0f1;
		}
		
		.faq-answer.show {
			display: block;
		}
		
		.footer {
			background: #2c3e50;
			color: white;
			padding: 40px 20px;
			text-align: center;
			border-top: 5px solid #3498db;
			margin-top: 50px;
		}
		
		.contact-info {
			margin: 20px 0;
		}
		
		.contact-info a {
			color: #3498db;
			text-decoration: none;
			font-weight: 600;
		}
		
		.contact-info a:hover {
			text-decoration: underline;
		}
		
		.copyright {
			margin-top: 20px;
			color: #7f8c8d;
			font-size: 0.9rem;
		}
		
		/* Quiz Page Styles */
		.quiz-container {
			max-width: 800px;
			margin: 40px auto;
			padding: 30px;
			background: linear-gradient(145deg, #2c3e50, #1a2a6c);
			border-radius: 20px;
			box-shadow: 0 15px 40px rgba(0,0,0,0.4);
			color: white;
			display: none;
		}
		
		.quiz-header {
			text-align: center;
			margin-bottom: 30px;
		}
		
		.quiz-header h2 {
			color: white;
			margin-bottom: 15px;
			font-size: 2.2rem;
		}
		
		.progress-container {
			height: 12px;
			background: rgba(255,255,255,0.1);
			border-radius: 10px;
			margin: 20px 0;
			overflow: hidden;
			box-shadow: inset 0 1px 3px rgba(0,0,0,0.3);
		}
		
		.progress-bar {
			height: 100%;
			background: linear-gradient(to right, #3498db, #2ecc71);
			width: 0%;
			transition: width 0.5s ease;
			border-radius: 10px;
		}
		
		.timer {
			font-size: 1.2rem;
			text-align: center;
			margin: 15px 0;
			font-weight: bold;
			color: #f39c12;
		}
		
		.question {
			margin-bottom: 30px;
			padding-bottom: 20px;
			border-bottom: 1px solid rgba(255,255,255,0.1);
		}
		
		.question-text {
			font-size: 1.3rem;
			margin-bottom: 20px;
			font-weight: 600;
			color: white;
			line-height: 1.5;
		}
		
		.options {
			display: grid;
			grid-template-columns: 1fr;
			gap: 15px;
		}
		
		.option {
			padding: 18px;
			background: rgba(255,255,255,0.1);
			border-radius: 10px;
			cursor: pointer;
			transition: all 0.2s ease;
			border: 2px solid transparent;
			font-size: 1.1rem;
		}
		
		.option:hover {
			background: rgba(52, 152, 219, 0.2);
			border-color: #3498db;
		}
		
		.option.selected {
			background: rgba(46, 204, 113, 0.2);
			border-color: #2ecc71;
			font-weight: 600;
		}
		
		.quiz-navigation {
			display: flex;
			justify-content: space-between;
			margin-top: 30px;
		}
		
		.nav-button {
			padding: 14px 30px;
			background: linear-gradient(to right, #3498db, #2c3e50);
			color: white;
			border: none;
			border-radius: 8px;
			cursor: pointer;
			font-size: 1.1rem;
			transition: all 0.3s;
			box-shadow: 0 4px 10px rgba(0,0,0,0.2);
		}
		
		.nav-button:hover {
			transform: translateY(-3px);
			box-shadow: 0 6px 15px rgba(0,0,0,0.3);
			background: linear-gradient(to right, #2980b9, #1a2a6c);
		}
		
		.nav-button:disabled {
			background: #7f8c8d;
			cursor: not-allowed;
			transform: none;
			box-shadow: none;
		}
		
		/* Payment Page Styles */
		.payment-container {
			max-width: 800px;
			margin: 40px auto;
			padding: 30px;
			background: linear-gradient(145deg, #2c3e50, #1a2a6c);
			border-radius: 20px;
			box-shadow: 0 15px 40px rgba(0,0,0,0.4);
			color: white;
			display: none;
		}
		
		.payment-header {
			text-align: center;
			margin-bottom: 30px;
		}
		
		.payment-header h2 {
			color: #2ecc71;
			margin-bottom: 10px;
			font-size: 2.2rem;
		}
		
		.payment-methods {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
			gap: 20px;
			margin: 30px 0;
		}
		
		.payment-method {
			border: 2px solid rgba(255,255,255,0.1);
			border-radius: 15px;
			padding: 25px;
			text-align: center;
			cursor: pointer;
			transition: all 0.3s ease;
			background: rgba(255,255,255,0.05);
		}
		
		.payment-method:hover, .payment-method.selected {
			border-color: #2ecc71;
			background: rgba(46, 204, 113, 0.1);
			transform: translateY(-5px);
		}
		
		.payment-method i {
			font-size: 50px;
			margin-bottom: 15px;
			color: #3498db;
		}
		
		.payment-method.selected i {
			color: #2ecc71;
		}
		
		.payment-method h4 {
			margin: 10px 0;
			color: white;
		}
		
		.payment-method p {
			color: #bdc3c7;
			font-size: 0.9rem;
		}
		
		.payment-form {
			margin: 30px 0;
		}
		
		.form-group {
			margin-bottom: 25px;
		}
		
		.form-group label {
			display: block;
			margin-bottom: 10px;
			font-weight: 600;
			color: white;
		}
		
		.form-group input {
			width: 100%;
			padding: 15px;
			border: 2px solid rgba(255,255,255,0.1);
			border-radius: 10px;
			font-size: 1.1rem;
			background: rgba(0,0,0,0.2);
			color: white;
		}
		
		.form-group input:focus {
			border-color: #3498db;
			outline: none;
			background: rgba(52, 152, 219, 0.1);
		}
		
		.pay-button {
			display: block;
			width: 100%;
			padding: 18px;
			background: linear-gradient(to right, #2ecc71, #27ae60);
			color: white;
			border: none;
			border-radius: 10px;
			font-size: 1.2rem;
			font-weight: bold;
			cursor: pointer;
			transition: all 0.3s;
			box-shadow: 0 5px 15px rgba(0,0,0,0.2);
			text-transform: uppercase;
			letter-spacing: 1px;
		}
		
		.pay-button:hover {
			transform: translateY(-3px);
			box-shadow: 0 8px 20px rgba(0,0,0,0.3);
			background: linear-gradient(to right, #27ae60, #2ecc71);
		}
		
		/* Certificate Page Styles */
		.certificate-container {
			max-width: 900px;
			margin: 40px auto;
			padding: 30px;
			background: linear-gradient(135deg, #f5f7fa, #e4e8f0);
			border-radius: 20px;
			box-shadow: 0 20px 50px rgba(0,0,0,0.3);
			text-align: center;
			border: 20px solid #fff;
			position: relative;
			display: none;
		}
		
		.certificate-header {
			margin-bottom: 30px;
		}
		
		.certificate-header h2 {
			font-size: 2.8rem;
			color: #2c3e50;
			margin-bottom: 10px;
			text-shadow: 0 2px 4px rgba(0,0,0,0.1);
		}
		
		.certificate-header p {
			color: #7f8c8d;
			font-size: 1.2rem;
		}
		
		.certificate-body {
			background: white;
			padding: 50px;
			border-radius: 15px;
			box-shadow: 0 10px 30px rgba(0,0,0,0.05);
			position: relative;
			border: 2px solid #3498db;
		}
		
		.certificate-title {
			font-size: 3rem;
			color: #2c3e50;
			margin: 30px 0;
			text-transform: uppercase;
			letter-spacing: 3px;
			font-weight: bold;
			text-shadow: 0 2px 4px rgba(0,0,0,0.1);
		}
		
		.certificate-subtitle {
			font-size: 1.8rem;
			color: #3498db;
			margin-bottom: 50px;
			font-weight: 600;
		}
		
		.awarded-to {
			font-size: 2.2rem;
			margin: 40px 0;
			color: #e74c3c;
			font-weight: bold;
			text-shadow: 0 2px 4px rgba(0,0,0,0.1);
		}
		
		.certificate-content {
			max-width: 600px;
			margin: 0 auto;
			font-size: 1.2rem;
			line-height: 1.8;
			color: #555;
		}
		
		.signatures {
			display: flex;
			justify-content: space-around;
			margin-top: 80px;
			padding-top: 30px;
			border-top: 2px solid #eee;
		}
		
		.signature {
			text-align: center;
		}
		
		.signature p {
			margin-top: 10px;
			font-weight: 600;
			color: #2c3e50;
		}
		
		.certificate-id {
			margin-top: 40px;
			font-size: 1.1rem;
			color: #7f8c8d;
		}
		
		.download-btn {
			display: inline-block;
			background: linear-gradient(to right, #3498db, #2c3e50);
			color: white;
			padding: 15px 40px;
			margin: 40px 0 20px;
			border-radius: 50px;
			text-decoration: none;
			font-weight: 600;
			transition: all 0.3s;
			font-size: 1.1rem;
			box-shadow: 0 5px 15px rgba(0,0,0,0.2);
		}
		
		.download-btn:hover {
			transform: translateY(-3px);
			box-shadow: 0 8px 20px rgba(0,0,0,0.3);
			background: linear-gradient(to right, #2980b9, #1a2a6c);
		}
		
		.watermark {
			position: absolute;
			opacity: 0.05;
			font-size: 20rem;
			transform: rotate(-30deg);
			top: 20%;
			left: 10%;
			z-index: 0;
			color: #2c3e50;
			pointer-events: none;
			font-weight: bold;
		}
		
		.confetti {
			position: fixed;
			width: 10px;
			height: 10px;
			background-color: #f39c12;
			top: -10px;
			z-index: 1000;
			animation: fall linear forwards;
		}
		
		@keyframes fall {
			to {
				transform: translateY(100vh) rotate(360deg);
				opacity: 0;
			}
		}
		
		/* Modal Styles */
		.modal {
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: rgba(0, 0, 0, 0.7);
			display: flex;
			justify-content: center;
			align-items: center;
			z-index: 1000;
			opacity: 0;
			visibility: hidden;
			transition: all 0.3s ease;
		}
		
		.modal.active {
			opacity: 1;
			visibility: visible;
		}
		
		.modal-content {
			background: linear-gradient(135deg, #2c3e50, #1a2a6c);
			border-radius: 20px;
			padding: 40px;
			max-width: 500px;
			width: 90%;
			text-align: center;
			position: relative;
			box-shadow: 0 20px 40px rgba(0,0,0,0.5);
			transform: translateY(20px);
			transition: all 0.3s ease;
		}
		
		.modal.active .modal-content {
			transform: translateY(0);
		}
		
		.modal-close {
			position: absolute;
			top: 15px;
			right: 15px;
			background: none;
			border: none;
			color: white;
			font-size: 1.5rem;
			cursor: pointer;
		}
		
		.modal h2 {
			color: #2ecc71;
			margin-bottom: 20px;
			font-size: 2rem;
		}
		
		.modal p {
			color: #ecf0f1;
			margin-bottom: 25px;
			font-size: 1.1rem;
			line-height: 1.6;
		}
		
		.modal-form {
			margin: 20px 0;
		}
		
		.modal-form input {
			width: 100%;
			padding: 15px;
			border: 2px solid rgba(255,255,255,0.1);
			border-radius: 10px;
			background: rgba(0,0,0,0.2);
			color: white;
			font-size: 1.1rem;
			margin-bottom: 20px;
		}
		
		.modal-form input:focus {
			border-color: #3498db;
			outline: none;
		}
		
		.modal-btn {
			background: linear-gradient(to right, #2ecc71, #27ae60);
			color: white;
			border: none;
			padding: 15px 40px;
			border-radius: 50px;
			font-size: 1.1rem;
			font-weight: bold;
			cursor: pointer;
			transition: all 0.3s;
			display: inline-block;
			margin: 10px 5px;
			text-transform: uppercase;
			letter-spacing: 1px;
		}
		
		.modal-btn:hover {
			transform: translateY(-3px);
			box-shadow: 0 5px 15px rgba(0,0,0,0.3);
		}
		
		.whatsapp-btn {
			background: linear-gradient(to right, #25D366, #128C7E);
		}
		
		.whatsapp-btn:hover {
			background: linear-gradient(to right, #128C7E, #25D366);
		}
		
		.verification-timer {
			font-size: 1.4rem;
			font-weight: bold;
			margin: 20px 0;
			color: #f39c12;
			background: rgba(0,0,0,0.3);
			padding: 10px;
			border-radius: 10px;
			display: inline-block;
		}
		
		.verification-steps {
			text-align: left;
			background: rgba(255,255,255,0.1);
			border-radius: 10px;
			padding: 20px;
			margin: 20px 0;
		}
		
		.verification-steps li {
			margin: 15px 0;
			display: flex;
			align-items: flex-start;
		}
		
		.verification-steps li i {
			color: #2ecc71;
			margin-right: 10px;
			font-size: 20px;
			margin-top: 5px;
		}
		
		.verified-badge {
			display: inline-block;
			background: #2ecc71;
			color: white;
			padding: 5px 15px;
			border-radius: 20px;
			font-weight: bold;
			margin-left: 10px;
			font-size: 0.9rem;
		}
		
		.ribbon {
			position: absolute;
			top: -10px;
			right: -10px;
			width: 150px;
			height: 150px;
			overflow: hidden;
		}
		
		.ribbon span {
			position: absolute;
			display: block;
			width: 225px;
			padding: 15px 0;
			background: linear-gradient(45deg, #ff5252, #ff7675);
			box-shadow: 0 5px 10px rgba(0,0,0,0.1);
			color: #fff;
			font-weight: bold;
			text-transform: uppercase;
			text-align: center;
			transform: rotate(45deg) translateY(-20px);
			top: 40px;
			right: -45px;
		}
		
		.success-animation {
			position: relative;
			width: 80px;
			height: 80px;
			margin: 0 auto 20px;
		}
		
		.success-animation .checkmark {
			width: 80px;
			height: 80px;
			border-radius: 50%;
			display: block;
			stroke-width: 2;
			stroke: #4bb71b;
			stroke-miterlimit: 10;
			box-shadow: inset 0px 0px 0px #4bb71b;
			animation: fill .4s ease-in-out .4s forwards, scale .3s ease-in-out .9s both;
		}
		
		.success-animation .checkmark__circle {
			stroke-dasharray: 166;
			stroke-dashoffset: 166;
			stroke-width: 2;
			stroke-miterlimit: 10;
			stroke: #4bb71b;
			fill: none;
			animation: stroke .6s cubic-bezier(0.65, 0, 0.45, 1) forwards;
		}
		
		.success-animation .checkmark__check {
			transform-origin: 50% 50%;
			stroke-dasharray: 48;
			stroke-dashoffset: 48;
			animation: stroke .3s cubic-bezier(0.65, 0, 0.45, 1) .8s forwards;
		}
		
		@keyframes stroke {
			100% { stroke-dashoffset: 0; }
		}
		
		@keyframes scale {
			0%, 100% { transform: none; }
			50% { transform: scale3d(1.1, 1.1, 1); }
		}
		
		@keyframes fill {
			100% { box-shadow: inset 0px 0px 0px 30px #4bb71b; }
		}
		
		.attempt-info {
			background: rgba(231, 76, 60, 0.2);
			padding: 15px;
			border-radius: 10px;
			margin: 15px 0;
			border-left: 4px solid #e74c3c;
		}
		
		/* Celebration Effects */
		.celebration {
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			pointer-events: none;
			z-index: 2000;
		}
		
		.party-popper {
			position: absolute;
			width: 40px;
			height: 40px;
			background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="%23f39c12" d="M5.5,16L3,9.5L16.5,2L15.5,5L19,6.5L17.5,10L15,7.5L11,9.5L14,14L11,12.5L7.5,18L5.5,16M14,21L12,18L13.5,14L17,15L14,21M17,2V7L21,5L17,2M10,1V6L14,4L10,1Z"/></svg>') no-repeat center;
			background-size: contain;
			animation: pop 0.8s forwards;
		}
		
		@keyframes pop {
			0% { transform: scale(0.5) translateY(0) rotate(0); opacity: 1; }
			100% { transform: scale(1.5) translateY(-100px) rotate(360deg); opacity: 0; }
		}
		
		/* Responsive Design */
		@media (max-width: 768px) {
			.hero h2 {
				font-size: 2rem;
			}
			
			.price-tag {
				font-size: 1.5rem;
			}
			
			.testimonial-grid {
				grid-template-columns: 1fr;
			}
			
			.certificate-title {
				font-size: 2.2rem;
			}
			
			.awarded-to {
				font-size: 1.8rem;
			}
			
			.payment-methods {
				grid-template-columns: 1fr;
			}
			
			.modal-content {
				padding: 30px 20px;
			}
		}
	</style>
</head>
<body>
	<!-- Header Section -->
	<div class="header">
		<div class="logo">
			<i class="fas fa-graduation-cap"></i>
			<h1>PyCertify</h1>
		</div>
		<div class="followers">
			<i class="fas fa-users"></i> 49K followers
		</div>
		<div class="time">
			<i class="fas fa-clock"></i> <span id="currentTime">10:05 AM</span>
		</div>
	</div>

	<!-- Hero Section -->
	<section class="hero">
		<h2>GET CERTIFIED IN PYTHON PROGRAMMING</h2>
		<div class="price-tag">ONLY RS. 49/-</div>
		
		<div class="features">
			<ul>
				<li><i class="fas fa-check-circle"></i> <strong>10 MINUTE QUIZ AND INSTANT CERTIFICATE</strong></li>
				<li><i class="fas fa-check-circle"></i> <strong>ADD IT TO YOUR CV AND LINKEDIN</strong></li>
				<li><i class="fas fa-check-circle"></i> <strong>5000+ LEARNERS CERTIFIED LAST MONTH</strong></li>
			</ul>
		</div>
		
		<button class="cta-button" id="startQuizBtn">GET CERTIFIED NOW!</button>
	</section>

	<!-- Offer Section -->
	<section class="offer-section">
		<h3>GET A VERIFIED PYTHON CERTIFICATE</h3>
		<p>Recognized by tech companies and educational institutions worldwide. Answer a simple assessment and get your instant certificate for just Rs.49 to level up your CV!</p>
		<div class="limited-offer">LIMITED PERIOD OFFER</div>
		<p>Click below to start the quiz</p>
		<button class="cta-button" id="startQuizBtn2">START QUIZ NOW</button>
	</section>

	<!-- Testimonials Section -->
	<section class="testimonials">
		<h3>What Our Students Say</h3>
		<div class="testimonial-grid">
			<div class="testimonial-card">
				<div class="quote">"</div>
				<div class="testimonial-content">
					This certification helped me land my first job as a Python developer. The process was quick and the certificate looks professional on my LinkedIn.
				</div>
				<div class="student">
					<img src="https://randomuser.me/api/portraits/men/32.jpg" alt="Student">
					<div class="student-info">
						<h4>Rajesh Kumar</h4>
						<p>Software Developer</p>
					</div>
				</div>
			</div>
			
			<div class="testimonial-card">
				<div class="quote">"</div>
				<div class="testimonial-content">
					I was skeptical at first, but for less than 50 rupees, I got a certificate that actually impressed my college placement cell. Worth every penny!
				</div>
				<div class="student">
					<img src="https://randomuser.me/api/portraits/women/44.jpg" alt="Student">
					<div class="student-info">
						<h4>Priya Sharma</h4>
						<p>Computer Science Student</p>
					</div>
				</div>
			</div>
			
			<div class="testimonial-card">
				<div class="quote">"</div>
				<div class="testimonial-content">
					Completed the quiz in just 8 minutes and got my certificate immediately. Added it to my resume and got more interview calls. Highly recommended!
				</div>
				<div class="student">
					<img src="https://randomuser.me/api/portraits/men/67.jpg" alt="Student">
					<div class="student-info">
						<h4>Vikram Singh</h4>
						<p>Data Analyst</p>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- FAQ Section -->
	<section class="faq">
		<h3>Frequently Asked Questions</h3>
		
		<div class="faq-item">
			<div class="faq-question">
				How long is the certification valid? <i class="fas fa-chevron-down"></i>
			</div>
			<div class="faq-answer">
				Our Python certification has lifetime validity. Once you earn it, you can use it forever on your resume and professional profiles.
			</div>
		</div>
		
		<div class="faq-item">
			<div class="faq-question">
				How soon will I receive my certificate? <i class="fas fa-chevron-down"></i>
			</div>
			<div class="faq-answer">
				Immediately after successful payment and quiz completion! You'll be able to download your certificate in PDF format right away.
			</div>
		</div>
		
		<div class="faq-item">
			<div class="faq-question">
				Is there any hidden fee? <i class="fas fa-chevron-down"></i>
			</div>
			<div class="faq-answer">
				Absolutely not! The total cost is Rs.49 inclusive of all charges. What you see is what you pay.
			</div>
		</div>
		
		<div class="faq-item">
			<div class="faq-question">
				What if I fail the quiz? <i class="fas fa-chevron-down"></i>
			</div>
			<div class="faq-answer">
				You get two attempts to pass the quiz. If you don't pass after two attempts, we'll provide study materials and you can try again after 7 days.
			</div>
		</div>
	</section>

	<!-- Footer -->
	<footer class="footer">
		<h3>PyCertify - Python Programming Certification</h3>
		<div class="contact-info">
			<p>For support: <a href="mailto:support@pycertify.com">support@pycertify.com</a></p>
			<p>Phone: <a href="tel:+917671070084">+91 7671-070084</a></p>
		</div>
		<p>© 2023 PyCertify. All rights reserved.</p>
		<p class="copyright">This certificate is issued for educational purposes and verifies completion of our assessment process.</p>
	</footer>

	<!-- Quiz Section (Initially Hidden) -->
	<section id="quiz" class="quiz-container">
		<div class="quiz-header">
			<h2>Python Certification Quiz</h2>
			<p>Answer 20 multiple-choice questions to get certified (Minimum 15 correct to pass)</p>
			<div class="progress-container">
				<div class="progress-bar" id="quizProgress"></div>
			</div>
			<div id="progressText">Question 1 of 20</div>
			<div class="timer" id="timer">Time Left: 10:00</div>
		</div>
		
		<div id="question-container">
			<!-- Questions will be dynamically inserted here -->
		</div>
		
		<div class="quiz-navigation">
			<button class="nav-button" id="prevBtn" disabled>Previous</button>
			<button class="nav-button" id="nextBtn">Next</button>
		</div>
	</section>

	<!-- Payment Section (Initially Hidden) -->
	<section id="payment" class="payment-container">
		<div class="payment-header">
			<h2>Payment Details</h2>
			<p>Complete your payment to receive your Python Certification</p>
			<div class="price-tag">Total: Rs. 49/-</div>
		</div>
		
		<div class="payment-methods">
			<div class="payment-method">
				<i class="fab fa-cc-paypal"></i>
				<h4>PayPal</h4>
				<p>Secure online payment</p>
			</div>
			<div class="payment-method selected">
				<i class="fab fa-cc-visa"></i>
				<h4>Credit/Debit Card</h4>
				<p>Visa, Mastercard, etc.</p>
			</div>
			<div class="payment-method">
				<i class="fas fa-mobile-alt"></i>
				<h4>UPI</h4>
				<p>Google Pay, PhonePe, etc.</p>
			</div>
		</div>
		
		<div class="payment-form">
			<div class="form-group">
				<label for="cardNumber">Card Number</label>
				<input type="text" id="cardNumber" placeholder="1234 5678 9012 3456">
			</div>
			
			<div class="form-group">
				<label for="cardName">Name on Card</label>
				<input type="text" id="cardName" placeholder="John Doe">
			</div>
			
			<div class="form-group" style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
				<div>
					<label for="expiry">Expiry Date</label>
					<input type="text" id="expiry" placeholder="MM/YY">
				</div>
				<div>
					<label for="cvv">CVV</label>
					<input type="text" id="cvv" placeholder="123">
				</div>
			</div>
			
			<button class="pay-button" id="payButton">PAY RS. 49/- NOW</button>
		</div>
	</section>

	<!-- Certificate Section (Initially Hidden) -->
	<section id="certificate" class="certificate-container">
		<div class="certificate-header">
			<h2>Congratulations!</h2>
			<p>You have successfully completed the Python Certification</p>
		</div>
		
		<div class="certificate-body">
			<div class="watermark">PyCertify</div>
			<div class="certificate-title">Certificate of Achievement</div>
			<div class="certificate-subtitle">Python Programming Certification</div>
			
			<p class="awarded-to" id="certificateName">Akhil Kumar</p>
			
			<div class="certificate-content">
				<p>This is to certify that <strong id="studentName">Akhil Kumar</strong> has successfully completed the PyCertify Python Programming Assessment with a score of <strong id="score">27/30</strong> and demonstrated proficiency in fundamental Python programming concepts.</p>
				
				<p>Awarded on <strong id="awardDate">July 7, 2025</strong></p>
			</div>
			
			<div class="signatures">
				<div class="signature">
					<div style="height: 80px; margin-bottom: 10px; display: flex; align-items: center; justify-content: center;">
						<img src="https://i.ibb.co/4TQY7yT/signature1.png" alt="Signature" style="height: 50px;">
					</div>
					<p>Dr. S. Rajan</p>
					<p>Certification Director</p>
				</div>
				<div class="signature">
					<div style="height: 80px; margin-bottom: 10px; display: flex; align-items: center; justify-content: center;">
						<img src="https://i.ibb.co/rF6T0zS/signature2.png" alt="Signature" style="height: 50px;">
					</div>
					<p>Prof. A. Sharma</p>
					<p>Head of Assessment</p>
				</div>
			</div>
			
			<div class="certificate-id">
				Certificate ID: PC-2025-7-<span id="passingId">7671070084</span>
			</div>
		</div>
		
		<a href="#" class="download-btn">
			<i class="fas fa-download"></i> DOWNLOAD CERTIFICATE (PDF)
		</a>
	</section>

	<!-- User Info Modal -->
	<div id="userInfoModal" class="modal">
		<div class="modal-content">
			<button class="modal-close">&times;</button>
			<h2>Enter Your Details</h2>
			<p>Please provide your information for the certificate</p>
			
			<div class="modal-form">
				<input type="text" id="userName" placeholder="Full Name (as on certificate)" required>
				<input type="tel" id="userPhone" placeholder="Phone Number" required>
				<input type="email" id="userEmail" placeholder="Email Address" required>
			</div>
			
			<div class="attempt-info">
				<i class="fas fa-exclamation-circle"></i> You have <strong>2 attempts</strong> to pass the quiz. 
				If you fail both attempts, you will not receive a certificate.
			</div>
			
			<button class="modal-btn" id="startQuizWithDetails">START QUIZ</button>
		</div>
	</div>

	<!-- Quiz Completion Modal -->
	<div id="quizCompleteModal" class="modal">
		<div class="modal-content">
			<div class="ribbon">
				<span>Passed!</span>
			</div>
			<button class="modal-close">&times;</button>
			
			<div class="success-animation">
				<svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
					<circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none"/>
					<path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8"/>
				</svg>
			</div>
			
			<h2>Congratulations! <span class="verified-badge">Quiz Passed</span></h2>
			<p>You scored <strong id="quizScore">18/20</strong> on the Python Certification Quiz!</p>
			
			<div class="verification-steps">
				<p><strong>Complete these steps to get your certificate:</strong></p>
				<ul>
					<li><i class="fas fa-check-circle"></i> Complete the payment process</li>
					<li><i class="fas fa-check-circle"></i> Verify your payment via WhatsApp</li>
					<li><i class="fas fa-check-circle"></i> Receive your certificate instantly</li>
				</ul>
			</div>
			
			<div class="verification-timer">
				<i class="fas fa-clock"></i> Time left for verification: <span id="verificationTimer">10:00</span>
			</div>
			
			<div class="verification-steps">
				<p><strong>Your Passing ID: <span id="passingIdDisplay" style="color:#f39c12">PC-2025-7-9059475454</span></strong></p>
				<p>Contact us at: <strong>+91 7671-070084</strong></p>
			</div>
			
			<button class="modal-btn whatsapp-btn" id="whatsappBtn">
				<i class="fab fa-whatsapp"></i> VERIFY VIA WHATSAPP
			</button>
			
			<div class="verification-steps" style="margin-top: 20px; background: rgba(52, 152, 219, 0.1);">
				<p><i class="fas fa-info-circle"></i> Want more course certificates? Send a WhatsApp message with the course name to get certified!</p>
			</div>
		</div>
	</div>

	<!-- Quiz Failed Modal -->
	<div id="quizFailedModal" class="modal">
		<div class="modal-content">
			<button class="modal-close">&times;</button>
			
			<div style="font-size: 5rem; color: #e74c3c; margin: 20px 0;">
				<i class="fas fa-times-circle"></i>
			</div>
			
			<h2>Quiz Not Passed</h2>
			<p>You scored <strong id="failedScore">14/20</strong> on the Python Certification Quiz!</p>
			
			<div class="attempt-info">
				<p>You need at least <strong>15 correct answers</strong> to pass the quiz.</p>
				<p>Remaining attempts: <strong id="remainingAttempts">1</strong></p>
			</div>
			
			<button class="modal-btn" id="retryQuizBtn">RETRY QUIZ</button>
			<button class="modal-btn whatsapp-btn" id="contactSupportBtn">
				<i class="fab fa-whatsapp"></i> CONTACT SUPPORT
			</button>
		</div>
	</div>

	<!-- Payment Verification Modal -->
	<div id="paymentVerifyModal" class="modal">
		<div class="modal-content">
			<button class="modal-close">&times;</button>
			<h2>Payment Verification <span class="verified-badge">Success</span></h2>
			
			<div style="font-size: 5rem; color: #2ecc71; margin: 20px 0;">
				<i class="fas fa-check-circle"></i>
			</div>
			
			<p>Your payment of <strong>Rs. 49/-</strong> has been verified successfully!</p>
			<p>Your certificate will be delivered via WhatsApp within 5 minutes.</p>
			
			<button class="modal-btn" id="viewCertificateBtn">VIEW CERTIFICATE</button>
		</div>
	</div>

	<div id="celebration" class="celebration"></div>

	<script>
		// Quiz data with 20 questions
		const quizData = [
			{
				question: "What is the output of: print(type([])) ?",
				options: ["<class 'list'>", "<type 'list'>", "list", "array"],
				answer: 0
			},
			{
				question: "Which of the following is not a valid Python data type?",
				options: ["list", "tuple", "map", "set"],
				answer: 2
			},
			{
				question: "What is the correct extension of Python file?",
				options: [".pt", ".pyth", ".p", ".py"],
				answer: 3
			},
			{
				question: "What is the output of: print(2 ** 3 ** 2) ?",
				options: ["512", "64", "5120", "256"],
				answer: 0
			},
			{
				question: "Which keyword is used for function in Python?",
				options: ["func", "define", "def", "function"],
				answer: 2
			},
			{
				question: "Which of the following is mutable?",
				options: ["String", "Tuple", "List", "Integer"],
				answer: 2
			},
			{
				question: "Which of these is used to define a block of code in Python?",
				options: ["Curly braces", "Parentheses", "Indentation", "Quotation"],
				answer: 2
			},
			{
				question: "What is the output of bool(0)?",
				options: ["True", "False", "0", "None"],
				answer: 1
			},
			{
				question: "What is the result of 4 // 2 in Python?",
				options: ["2.0", "2", "2.5", "Error"],
				answer: 1
			},
			{
				question: "How do you start a comment in Python?",
				options: ["//", "<!–", "#", "/*"],
				answer: 2
			},
			{
				question: "What is the correct syntax to import a module named math?",
				options: ["import.math", "import math", "include math", "using math"],
				answer: 1
			},
			{
				question: "What will be the output of print(\"5\" + \"5\")?",
				options: ["10", "55", "Error", "5+5"],
				answer: 1
			},
			{
				question: "What will be the result of len(\"Python\")?",
				options: ["5", "6", "7", "Error"],
				answer: 1
			},
			{
				question: "What does range(5) return?",
				options: ["[1, 2, 3, 4, 5]", "[0, 1, 2, 3, 4]", "[0, 1, 2, 3, 4, 5]", "(0, 5)"],
				answer: 1
			},
			{
				question: "What is the output of: print(type({}))?",
				options: ["<class 'set'>", "<class 'dict'>", "<class 'tuple'>", "<class 'list'>"],
				answer: 1
			},
			{
				question: "What is used to handle exceptions in Python?",
				options: ["try/except", "do/catch", "throw/catch", "exception"],
				answer: 0
			},
			{
				question: "Which function converts a string to a number in Python?",
				options: ["str()", "float()", "int()", "Both B and C"],
				answer: 3
			},
			{
				question: "Which operator is used for exponentiation in Python?",
				options: ["^", "**", "^^", "pow"],
				answer: 1
			},
			{
				question: "Which one is not a keyword in Python?",
				options: ["pass", "eval", "assert", "nonlocal"],
				answer: 1
			},
			{
				question: "Which of these functions is used to read a line from a file?",
				options: ["readline()", "readlines()", "read()", "input()"],
				answer: 0
			}
		];

		// Global variables
		let currentQuestion = 0;
		let userAnswers = new Array(quizData.length).fill(null);
		let score = 0;
		let timer;
		let timeLeft = 600; // 10 minutes in seconds
		let userName = "";
		let userPhone = "";
		let userEmail = "";
		let attemptsLeft = 2;
		let passingId = "";

		// DOM elements
		const startQuizBtn = document.getElementById('startQuizBtn');
		const startQuizBtn2 = document.getElementById('startQuizBtn2');
		const quizSection = document.getElementById('quiz');
		const paymentSection = document.getElementById('payment');
		const certificateSection = document.getElementById('certificate');
		const progressBar = document.getElementById('quizProgress');
		const progressText = document.getElementById('progressText');
		const questionContainer = document.getElementById('question-container');
		const prevBtn = document.getElementById('prevBtn');
		const nextBtn = document.getElementById('nextBtn');
		const timerDisplay = document.getElementById('timer');
		const payButton = document.getElementById('payButton');
		const certificateName = document.getElementById('certificateName');
		const studentName = document.getElementById('studentName');
		const scoreDisplay = document.getElementById('score');
		const awardDate = document.getElementById('awardDate');
		const userInfoModal = document.getElementById('userInfoModal');
		const quizCompleteModal = document.getElementById('quizCompleteModal');
		const quizFailedModal = document.getElementById('quizFailedModal');
		const paymentVerifyModal = document.getElementById('paymentVerifyModal');
		const startQuizWithDetailsBtn = document.getElementById('startQuizWithDetails');
		const userNameInput = document.getElementById('userName');
		const userPhoneInput = document.getElementById('userPhone');
		const userEmailInput = document.getElementById('userEmail');
		const quizScoreDisplay = document.getElementById('quizScore');
		const verificationTimerDisplay = document.getElementById('verificationTimer');
		const whatsappBtn = document.getElementById('whatsappBtn');
		const viewCertificateBtn = document.getElementById('viewCertificateBtn');
		const retryQuizBtn = document.getElementById('retryQuizBtn');
		const contactSupportBtn = document.getElementById('contactSupportBtn');
		const remainingAttemptsDisplay = document.getElementById('remainingAttempts');
		const failedScoreDisplay = document.getElementById('failedScore');
		const passingIdDisplay = document.getElementById('passingIdDisplay');
		const passingIdElement = document.getElementById('passingId');
		const modalCloseBtns = document.querySelectorAll('.modal-close');
		const celebration = document.getElementById('celebration');

		// Generate a unique passing ID
		function generatePassingId() {
			const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
			let result = '';
			for (let i = 0; i < 8; i++) {
				result += chars.charAt(Math.floor(Math.random() * chars.length));
			}
			return 'PC-' + new Date().getFullYear() + '-' + (new Date().getMonth() + 1) + '-' + result;
		}

		// Update current time
		function updateCurrentTime() {
			const now = new Date();
			const hours = now.getHours();
			const minutes = now.getMinutes().toString().padStart(2, '0');
			const ampm = hours >= 12 ? 'PM' : 'AM';
			const formattedHours = hours % 12 || 12;
			document.getElementById('currentTime').textContent = `${formattedHours}:${minutes} ${ampm}`;
		}
		updateCurrentTime();
		setInterval(updateCurrentTime, 60000); // Update every minute

		// Toggle FAQ answers
		document.querySelectorAll('.faq-question').forEach(question => {
			question.addEventListener('click', () => {
				const answer = question.nextElementSibling;
				answer.classList.toggle('show');
				const icon = question.querySelector('i');
				if (answer.classList.contains('show')) {
					icon.classList.remove('fa-chevron-down');
					icon.classList.add('fa-chevron-up');
				} else {
					icon.classList.remove('fa-chevron-up');
					icon.classList.add('fa-chevron-down');
				}
			});
		});

		// Modal functionality
		function showModal(modal) {
			modal.classList.add('active');
			document.body.style.overflow = 'hidden';
		}

		function hideModal(modal) {
			modal.classList.remove('active');
			document.body.style.overflow = '';
		}

		// Show user info modal when starting quiz
		function showUserInfoModal() {
			passingId = generatePassingId();
			showModal(userInfoModal);
		}

		// Start quiz after user info input
		function startQuizWithDetails() {
			userName = userNameInput.value.trim();
			userPhone = userPhoneInput.value.trim();
			userEmail = userEmailInput.value.trim();
			
			if (!userName || !userPhone || !userEmail) {
				alert("Please enter all required details to continue");
				return;
			}
			
			if (!/^\d{10}$/.test(userPhone)) {
				alert("Please enter a valid 10-digit phone number");
				return;
			}
			
			if (!/^\S+@\S+\.\S+$/.test(userEmail)) {
				alert("Please enter a valid email address");
				return;
			}
			
			hideModal(userInfoModal);
			startQuiz();
		}

		// Close modals
		modalCloseBtns.forEach(btn => {
			btn.addEventListener('click', function() {
				const modal = this.closest('.modal');
				hideModal(modal);
			});
		});

		// Start quiz function
		function startQuiz() {
			// Hide landing content
			document.querySelector('.hero').style.display = 'none';
			document.querySelector('.offer-section').style.display = 'none';
			document.querySelector('.testimonials').style.display = 'none';
			document.querySelector('.faq').style.display = 'none';
			
			// Show quiz section
			quizSection.style.display = 'block';
			quizSection.scrollIntoView({ behavior: 'smooth' });
			
			// Reset variables
			currentQuestion = 0;
			userAnswers.fill(null);
			score = 0;
			timeLeft = 600;
			
			// Start timer
			startTimer();
			
			// Render first question
			renderQuestion();
		}

		// Start quiz event listeners
		startQuizBtn.addEventListener('click', showUserInfoModal);
		startQuizBtn2.addEventListener('click', showUserInfoModal);
		startQuizWithDetailsBtn.addEventListener('click', startQuizWithDetails);

		// Timer function
		function startTimer() {
			clearInterval(timer);
			
			timer = setInterval(() => {
				timeLeft--;
				
				// Update timer display
				const minutes = Math.floor(timeLeft / 60);
				const seconds = timeLeft % 60;
				timerDisplay.textContent = `Time Left: ${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
				
				// Time's up
				if (timeLeft <= 0) {
					clearInterval(timer);
					submitQuiz();
				}
			}, 1000);
		}

		// Render current question
		function renderQuestion() {
			// Clear previous question
			questionContainer.innerHTML = '';
			
			const question = quizData[currentQuestion];
			
			// Create question element
			const questionElement = document.createElement('div');
			questionElement.classList.add('question');
			
			const questionText = document.createElement('div');
			questionText.classList.add('question-text');
			questionText.textContent = `${currentQuestion + 1}. ${question.question}`;
			questionElement.appendChild(questionText);
			
			// Create options container
			const optionsContainer = document.createElement('div');
			optionsContainer.classList.add('options');
			
			// Create options
			question.options.forEach((option, index) => {
				const optionElement = document.createElement('div');
				optionElement.classList.add('option');
				if (userAnswers[currentQuestion] === index) {
					optionElement.classList.add('selected');
				}
				optionElement.textContent = option;
				
				optionElement.addEventListener('click', () => {
					// Remove selected class from all options
					document.querySelectorAll('.option').forEach(opt => {
						opt.classList.remove('selected');
					});
					
					// Add selected class to clicked option
					optionElement.classList.add('selected');
					
					// Save answer
					userAnswers[currentQuestion] = index;
				});
				
				optionsContainer.appendChild(optionElement);
			});
			
			questionElement.appendChild(optionsContainer);
			questionContainer.appendChild(questionElement);
			
			// Update progress
			const progress = ((currentQuestion + 1) / quizData.length) * 100;
			progressBar.style.width = `${progress}%`;
			progressText.textContent = `Question ${currentQuestion + 1} of ${quizData.length}`;
			
			// Update navigation buttons
			prevBtn.disabled = currentQuestion === 0;
			nextBtn.textContent = currentQuestion === quizData.length - 1 ? 'Submit Quiz' : 'Next';
		}

		// Navigation buttons
		prevBtn.addEventListener('click', () => {
			if (currentQuestion > 0) {
				currentQuestion--;
				renderQuestion();
			}
		});

		nextBtn.addEventListener('click', () => {
			// Save answer if not answered
			if (userAnswers[currentQuestion] === null) {
				const selectedOption = document.querySelector('.option.selected');
				if (selectedOption) {
					const options = document.querySelectorAll('.option');
					userAnswers[currentQuestion] = Array.from(options).indexOf(selectedOption);
				}
			}
			
			if (currentQuestion < quizData.length - 1) {
				currentQuestion++;
				renderQuestion();
			} else {
				submitQuiz();
			}
		});

		// Create celebration effects
		function createCelebration() {
			// Clear any existing celebration
			celebration.innerHTML = '';
			
			// Create confetti
			const colors = ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6'];
			
			for (let i = 0; i < 150; i++) {
				const confetti = document.createElement('div');
				confetti.classList.add('confetti');
				confetti.style.left = `${Math.random() * 100}vw`;
				confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
				confetti.style.width = `${Math.random() * 10 + 5}px`;
				confetti.style.height = confetti.style.width;
				confetti.style.animationDuration = `${Math.random() * 3 + 2}s`;
				
				celebration.appendChild(confetti);
				
				// Remove confetti after animation completes
				setTimeout(() => {
					confetti.remove();
				}, 5000);
			}
			
			// Create party poppers
			for (let i = 0; i < 20; i++) {
				const popper = document.createElement('div');
				popper.classList.add('party-popper');
				popper.style.left = `${Math.random() * 100}vw`;
				popper.style.top = `${Math.random() * 100}vh`;
				popper.style.animationDelay = `${i * 0.1}s`;
				
				celebration.appendChild(popper);
				
				// Remove popper after animation completes
				setTimeout(() => {
					popper.remove();
				}, 1000);
			}
		}

		// Submit quiz
		function submitQuiz() {
			clearInterval(timer);
			
			// Calculate score
			userAnswers.forEach((answer, index) => {
				if (answer === quizData[index].answer) {
					score++;
				}
			});
			
			// Hide quiz section
			quizSection.style.display = 'none';
			
			// Check if passed
			if (score >= 15) {
				// Show quiz completion modal
				quizScoreDisplay.textContent = `${score}/20`;
				passingIdDisplay.textContent = passingId;
				showModal(quizCompleteModal);
				
				// Create celebration effects
				createCelebration();
				
				// Start verification timer (10 minutes)
				let verificationTime = 600;
				const verificationTimer = setInterval(() => {
					verificationTime--;
					
					// Update timer display
					const minutes = Math.floor(verificationTime / 60);
					const seconds = verificationTime % 60;
					verificationTimerDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
					
					// Time's up
					if (verificationTime <= 0) {
						clearInterval(verificationTimer);
						hideModal(quizCompleteModal);
						alert("Verification time expired. Please contact support for assistance.");
					}
				}, 1000);
			} else {
				// Decrease attempts
				attemptsLeft--;
				// Show quiz failed modal
				failedScoreDisplay.textContent = `${score}/20`;
				remainingAttemptsDisplay.textContent = attemptsLeft;
				showModal(quizFailedModal);
			}
		}

		// Retry quiz
		retryQuizBtn.addEventListener('click', () => {
			hideModal(quizFailedModal);
			if (attemptsLeft > 0) {
				startQuiz();
			} else {
				alert("No attempts left. Please contact support for assistance.");
			}
		});

		// Contact support via WhatsApp
		contactSupportBtn.addEventListener('click', function() {
			const phone = "917671070084";
			const message = `Hello, I need support for the Python Certification quiz. I've used all my attempts. My name is ${userName}.`;
			const whatsappUrl = `https://wa.me/${phone}?text=${encodeURIComponent(message)}`;
			window.open(whatsappUrl, '_blank');
		});

		// Payment method selection
		document.querySelectorAll('.payment-method').forEach(method => {
			method.addEventListener('click', () => {
				// Remove selected class from all methods
				document.querySelectorAll('.payment-method').forEach(m => {
					m.classList.remove('selected');
				});
				
				// Add selected class to clicked method
				method.classList.add('selected');
			});
		});

		// Pay button
		payButton.addEventListener('click', () => {
			// Get name from payment form
			const name = document.getElementById('cardName').value || userName || 'Python Developer';
			
			// Hide payment section
			paymentSection.style.display = 'none';
			
			// Show payment verification modal
			showModal(paymentVerifyModal);
		});

		// WhatsApp button functionality
		whatsappBtn.addEventListener('click', function() {
			const phone = "917671070084";
			const message = `Hello, I have completed the Python Certification quiz and would like to make the payment for my certificate. 
Name: ${userName}
Passing ID: ${passingId}
Score: ${score}/20
Please provide payment instructions.`;
			const whatsappUrl = `https://wa.me/${phone}?text=${encodeURIComponent(message)}`;
			window.open(whatsappUrl, '_blank');
		});

		// View certificate button
		viewCertificateBtn.addEventListener('click', function() {
			hideModal(paymentVerifyModal);
			
			// Update certificate
			certificateName.textContent = userName;
			studentName.textContent = userName;
			scoreDisplay.textContent = `${score}/20`;
			passingIdElement.textContent = passingId;
			
			// Set current date
			const now = new Date();
			const options = { year: 'numeric', month: 'long', day: 'numeric' };
			awardDate.textContent = now.toLocaleDateString('en-US', options);
			
			// Show certificate
			certificateSection.style.display = 'block';
			certificateSection.scrollIntoView({ behavior: 'smooth' });
			
			// Create celebration effects
			createCelebration();
		});

		// Initialize progress bar
		progressBar.style.width = '0%';
	</script>
</body>
</html>